load("c_codes_generator.sage")


#~ NOTE: generated codes will be in the sub-directory "c_codes"

#~ Data structure for 'amns_data' below: [delta, n, E, rho_log2, gamma, M, M', conv_P0, conv_P1]

#~ -------------------------------- for 32-bits computer -------------------------------------------------------------------

word_size = 32

p = 72876614521445747087146673850407410801783398508850933464740963503928987654707

amns_data = [0, 13, [-2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 25, 
				28358543700801438288697999582040688203565917787731136745297671529457109828202, 
				[339445, -89767, -195776, 54047, 64533, 146431, -90544, 372734, 392928, 16418, 60007, 139921, 109713], 
				[2419461793, 3573709715, 919492381, 852435122, 913268822, 2325814501, 2810577607, 2317451020, 1749535181, 3211163653, 444564538, 2862384428, 1999110111], 
				[1378454, 1172524, 1271469, 1417701, 1762033, 1822691, 1765092, 998244, 1155434, 1269198, 954449, 927611, 815732], 
				[1452962, 1412803, 1575334, 1403022, 1887167, 1717534, 1778213, 1189339, 927788, 1395248, 1172295, 614777, 840824]]


#~ -------------------------------- for 64-bits computer -----------------------------------------------------------------

word_size = 64

p = 78724239600625480298692691298392864706707889970105486261087202076552731179457

amns_data = [4, 5, [-2, 0, 0, 0, 0, 1], 55, 
				67121246142329733953157532273927750633628991646367117191031794526296140945147, 
				[-474667993690623, 1402623091101957, 38605154947216, 148617409519721, 1474731667115964], 
				[5187472560635430935, 4072120099921067645, 1358633054727937561, 7147122787381547036, 2177329607927910459], 
				[2417154222381215, 1717597245556995, 2230246623216472, 1342091056533950, 1871634882583606], 
				[3124006495515283, 1604926006855910, 2387750801860216, 1034119891388689, 1305308913034411]]


#~ -------------------------------- C codes generation according to the value of word_size ----------------------------------

#~ WARNING: 'amns_data' is supposed generated with the value of 'word_size'; otherwise, computations will be incorrect. 

if word_size == 64 :
	
	target_archi_info = [64, "int64_t", "uint64_t", "__int128", "int128", "uint128"]
	
	build_amns_c_codes(p, amns_data, target_archi_info)
elif word_size == 32 :
	
	target_archi_info = [32, "int", "uint", "long long", "llong", "ullong"]
	
	build_amns_c_codes(p, amns_data, target_archi_info)
else :
	print "Unknown architecture; please specify 'target_archi_info'." 










  

























































































